// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    partial class AppDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.16");

            modelBuilder.Entity("Domain.Entidades.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("FechaPublicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Domain.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.Entidades.UsuarioSeguido", b =>
                {
                    b.Property<int>("IdSeguidor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSeguido")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdSeguidor", "IdSeguido");

                    b.HasIndex("IdSeguido");

                    b.ToTable("UsuarioSeguidos");
                });

            modelBuilder.Entity("Domain.Entidades.Post", b =>
                {
                    b.HasOne("Domain.Entidades.Usuario", "Usuario")
                        .WithMany("PostRelationList")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entidades.UsuarioSeguido", b =>
                {
                    b.HasOne("Domain.Entidades.Usuario", "Seguido")
                        .WithMany("Seguidores")
                        .HasForeignKey("IdSeguido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entidades.Usuario", "Seguidor")
                        .WithMany("Seguidos")
                        .HasForeignKey("IdSeguidor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Seguido");

                    b.Navigation("Seguidor");
                });

            modelBuilder.Entity("Domain.Entidades.Usuario", b =>
                {
                    b.Navigation("PostRelationList");

                    b.Navigation("Seguidores");

                    b.Navigation("Seguidos");
                });
#pragma warning restore 612, 618
        }
    }
}
